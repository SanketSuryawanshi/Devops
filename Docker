
 /$$$$$$$   /$$$$$$   /$$$$$$  /$$   /$$ /$$$$$$$$ /$$$$$$$ 
| $$__  $$ /$$__  $$ /$$__  $$| $$  /$$/| $$_____/| $$__  $$
| $$  \ $$| $$  \ $$| $$  \__/| $$ /$$/ | $$      | $$  \ $$
| $$  | $$| $$  | $$| $$      | $$$$$/  | $$$$$   | $$$$$$$/
| $$  | $$| $$  | $$| $$      | $$  $$  | $$__/   | $$__  $$
| $$  | $$| $$  | $$| $$    $$| $$\  $$ | $$      | $$  \ $$
| $$$$$$$/|  $$$$$$/|  $$$$$$/| $$ \  $$| $$$$$$$$| $$  | $$
|_______/  \______/  \______/ |__/  \__/|________/|__/  |__/


>> Docker is containerization Platform for Developing,Packaging,Shipping & Running your application
>> Run Application in Isolated enviornment 
>> Faster Deployment | Helps to solve Compatibility issues 

>> SEG >> CODE >> PACKAGE INTO SINGLE FILE >> DOCKERFILE >> DOCKER IMAGE >> DOCKER CONTAINER
>> Running Docker Image is called as Docker Container 

>> Docker Container is a way to Package Application with all dependency & Configuration 
>> It can be easily shared
>> Makes Deployment & Deployment Efficient 
>> We can run multople containers on single machines as they are isolated 

>> Docker is usefull in condition when we want to test different applications with different dependency e.g Node 14 | 16 | python 2 | python 3 at Same time
>> Docker containers are light weight & fast as compared to VM as VM need whole OS, as container encapsulate apps instead of whole machine


Simple text file with instructions
to bild docker images
_________________                                         
|                |                                       
|  Docker File   |  -->>>  Docker Image ( Single File with All Dependency | Lib to Run )  ------------>>> ----> Container 1 | Container 2 | Container 3  ( Running Instance Of Docker Images )
|________________| 



██████╗  ██████╗  ██████╗██╗  ██╗███████╗██████╗     ██╗  ██╗██╗   ██╗██████╗ 
██╔══██╗██╔═══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗    ██║  ██║██║   ██║██╔══██╗
██║  ██║██║   ██║██║     █████╔╝ █████╗  ██████╔╝    ███████║██║   ██║██████╔╝
██║  ██║██║   ██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗    ██╔══██║██║   ██║██╔══██╗
██████╔╝╚██████╔╝╚██████╗██║  ██╗███████╗██║  ██║    ██║  ██║╚██████╔╝██████╔╝
╚═════╝  ╚═════╝  ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝    ╚═╝  ╚═╝ ╚═════╝ ╚═════╝ 
                                                                              

>> Docker Hub is like private or public registery for storing all docker images at one place, anyone can use and store docker images 
>> Inside Docker Hub we can see we have multiple repositery for every images


  _   _  ___  ____  _____       _ ____  
 | \ | |/ _ \|  _ \| ____|     | / ___| 
 |  \| | | | | | | |  _|    _  | \___ \ 
 | |\  | |_| | |_| | |___  | |_| |___) |
 |_| \_|\___/|____/|_____|  \___/|____/ 
                                        

>> apt-get install nodejs | apt-get install npm
>> git clone https://github.com/Adedoyin-Emmanuel/react-weather-app.git
>> cd react-weather-app >> npm install >> npm run start

root@ip-172-31-26-211:/home/ubuntu/react-weather-app# ls -lrt
total 756
-rw-r--r--   1 root root    906 May 13 13:18 README.md
-rw-r--r--   1 root root   1494 May 13 13:18 Jenkinsfile
-rw-r--r--   1 root root    124 May 13 13:18 Dockerfile
-rw-r--r--   1 root root   1141 May 13 13:18 package.json
drwxr-xr-x   2 root root   4096 May 13 13:18 scripts
drwxr-xr-x   2 root root   4096 May 13 13:18 public
drwxr-xr-x   9 root root   4096 May 13 13:18 src
-rw-r--r--   1 root root 703244 May 13 13:23 package-lock.json
drwxr-xr-x 890 root root  36864 May 13 13:24 node_modules


██████╗  ██████╗  ██████╗██╗  ██╗███████╗██████╗ ███████╗██╗██╗     ███████╗
██╔══██╗██╔═══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗██╔════╝██║██║     ██╔════╝
██║  ██║██║   ██║██║     █████╔╝ █████╗  ██████╔╝█████╗  ██║██║     █████╗  
██║  ██║██║   ██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗██╔══╝  ██║██║     ██╔══╝  
██████╔╝╚██████╔╝╚██████╗██║  ██╗███████╗██║  ██║██║     ██║███████╗███████╗
╚═════╝  ╚═════╝  ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝╚══════╝
                                                                            
FROM  node:18-alpine
WORKDIR /app
COPY . .
RUN npm install
CMD ["npm","run","start"]

>> docker build -t myapp .
>> docker image prune -a : To deletel all unused images


root@ip-172-31-26-211:/home/ubuntu/react-weather-app# docker build -t myapp .

Sending build context to Docker daemon  4.475MB
Step 1/6 : FROM  node:18-alpine
18-alpine: Pulling from library/node
4abcf2066143: Pull complete
45a0166cf96b: Pull complete
832e0dc1fe41: Pull complete
8ae971f79f99: Pull complete
Digest: sha256:4837c2ac8998cf172f5892fb45f229c328e4824c43c8506f8ba9c7996d702430
Status: Downloaded newer image for node:18-alpine
 ---> 1835bef2bac8
Step 2/6 : WORKDIR /app
 ---> Running in a12a2b7e2656
Removing intermediate container a12a2b7e2656
 ---> 86c53802463f
Step 3/6 : COPY package.json package-lock.json ./
 ---> 0e64b276ea4c
Step 4/6 : COPY . .
 ---> 22b66bf6966a
Step 5/6 : RUN npm install
 ---> Running in b421dfea7ca5

>> docker images | docker image ls
>> docker run -d --rm -p 3000:3000 myapp  ( You can access application by port 3000 ) -d : Detached Mode | --rm : to remove docker container after stop } --p : Define Port Mapping (system:container)

root@ip-172-31-26-211:/home/ubuntu/react-weather-app# docker images
REPOSITORY   TAG         IMAGE ID       CREATED         SIZE
myapp        latest      810f92a6285f   9 minutes ago   488MB
node         18-alpine   1835bef2bac8   2 weeks ago     127MB

root@ip-172-31-26-211:/home/ubuntu/react-weather-app# docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                                       NAMES
004126d88529   myapp     "docker-entrypoint.s…"   6 minutes ago   Up 6 minutes   0.0.0.0:3000->3000/tcp, :::3000->3000/tcp   vigilant_maxwell

root@ip-172-31-26-211:/home/ubuntu/react-weather-app# docker container ls
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS                                       NAMES
004126d88529   myapp     "docker-entrypoint.s…"   6 minutes ago   Up 6 minutes   0.0.0.0:3000->3000/tcp, :::3000->3000/tcp   vigilant_maxwell

>> docker stop <container-id>
>> docker rm <container-id>
>> docker kill <container-id>
>> docker rmi <image-name>
>> docker image prune -a



  ____  ____  _____      ____  _____ _____ ___ _   _ _____ ____    ___ __  __    _    ____ _____ ____  
 |  _ \|  _ \| ____|    |  _ \| ____|  ___|_ _| \ | | ____|  _ \  |_ _|  \/  |  / \  / ___| ____/ ___| 
 | |_) | |_) |  _| _____| | | |  _| | |_   | ||  \| |  _| | | | |  | || |\/| | / _ \| |  _|  _| \___ \ 
 |  __/|  _ <| |__|_____| |_| | |___|  _|  | || |\  | |___| |_| |  | || |  | |/ ___ \ |_| | |___ ___) |
 |_|   |_| \_\_____|    |____/|_____|_|   |___|_| \_|_____|____/  |___|_|  |_/_/   \_\____|_____|____/ 
                                                                                                       

>> Multiple Predefined Images already present on docker registery
>> docker pull <image-name>

>> docker pull tomcat
>> docker run -d --it -p 8080:8080 tomcat
>> docker exec -it <container-id> /bin/bash


root@0e08dbe06a6a:/usr/local/tomcat# ls -lrt
total 160
drwxr-xr-x 7 root root  4096 Apr 16 12:17 webapps.dist
-rw-r--r-- 1 root root 16076 Apr 16 12:17 RUNNING.txt
-rw-r--r-- 1 root root  6776 Apr 16 12:17 RELEASE-NOTES
-rw-r--r-- 1 root root  3298 Apr 16 12:17 README.md
-rw-r--r-- 1 root root  2333 Apr 16 12:17 NOTICE
-rw-r--r-- 1 root root 60393 Apr 16 12:17 LICENSE
-rw-r--r-- 1 root root  6210 Apr 16 12:17 CONTRIBUTING.md
-rw-r--r-- 1 root root 21043 Apr 16 12:17 BUILDING.txt
drwxrwxrwt 2 root root  4096 May  2 06:54 temp
drwxr-xr-x 2 root root  4096 May  2 06:54 lib
drwxr-xr-x 2 root root  4096 May  2 06:54 native-jni-lib
drwxr-xr-x 2 root root  4096 May  2 06:54 bin
drwxr-xr-x 1 root root  4096 May 13 14:20 conf
drwxrwxrwt 1 root root  4096 May 13 14:20 logs
drwxr-xr-x 1 root root  4096 May 13 14:24 webapps
drwxrwxrwt 1 root root  4096 May 13 14:24 work

root@0e08dbe06a6a:/usr/local/tomcat# cd webapps

>> wget https://tomcat.apache.org/tomcat-7.0-doc/appdev/sample/sample.war

root@0e08dbe06a6a:/usr/local/tomcat/webapps# ls -lrt
total 12
-rw-r--r-- 1 root root 4606 Mar 31  2012 sample.war
drwxr-x--- 5 root root 4096 May 13 14:25 sample

root@0e08dbe06a6a:/usr/local/tomcat/webapps# cd sample

root@0e08dbe06a6a:/usr/local/tomcat/webapps/sample# ls -lrt
total 20
-rw-r----- 1 root root  376 Jul 30  2007 hello.jsp
drwxr-x--- 4 root root 4096 May 13 14:24 WEB-INF
drwxr-x--- 2 root root 4096 May 13 14:24 images
drwxr-x--- 2 root root 4096 May 13 14:24 META-INF
-rw-r----- 1 root root  679 May 13 14:25 index.html
root@0e08dbe06a6a:/usr/local/tomcat/webapps/sample#



>> docker login : suryawanshisanket69@gmail.com vR@W&G*$,GZTf8?
>> docker push suryawanshisanket/myapp:latest

root@ip-172-31-26-211:/home/ubuntu/react-weather-app# docker images
REPOSITORY                TAG         IMAGE ID       CREATED             SIZE
myapp                     latest      810f92a6285f   About an hour ago   488MB
suryawanshisanket/myapp   latest      810f92a6285f   About an hour ago   488MB
tomcat                    latest      fca42eb4b550   11 days ago         455MB
node                      18-alpine   1835bef2bac8   2 weeks ago         127MB
root@ip-172-31-26-211:/home/ubuntu/react-weather-app# docker push suryawanshisanket/myapp:latest
The push refers to repository [docker.io/suryawanshisanket/myapp]
e74165181365: Pushing [===========>                                       ]  79.22MB/355.2MB
0b1a503203e5: Pushed
68e83dcc07d3: Pushed
ac55bed0f2c2: Pushed
3fecce352908: Pushed
1da03ac21ec8: Pushed
926b35a05f1d: Pushed
d4fc045c9e3a: Pushed


>> docker tag <old-image-name>:<tag> suryawanshisanket/<new-image-name>:<tag>



██████╗  ██████╗  ██████╗██╗  ██╗███████╗██████╗     ██╗   ██╗ ██████╗ ██╗     ██╗   ██╗███╗   ███╗███████╗
██╔══██╗██╔═══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗    ██║   ██║██╔═══██╗██║     ██║   ██║████╗ ████║██╔════╝
██║  ██║██║   ██║██║     █████╔╝ █████╗  ██████╔╝    ██║   ██║██║   ██║██║     ██║   ██║██╔████╔██║█████╗  
██║  ██║██║   ██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗    ╚██╗ ██╔╝██║   ██║██║     ██║   ██║██║╚██╔╝██║██╔══╝  
██████╔╝╚██████╔╝╚██████╗██║  ██╗███████╗██║  ██║     ╚████╔╝ ╚██████╔╝███████╗╚██████╔╝██║ ╚═╝ ██║███████╗
╚═════╝  ╚═════╝  ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝      ╚═══╝   ╚═════╝ ╚══════╝ ╚═════╝ ╚═╝     ╚═╝╚══════╝
                                                                                                           

root@ip-172-31-26-211:/home/ubuntu/python-progrmme# cat programme1.py
user_name = input("Enter your name to store in file or enter to proceed:")

if user_name:
    with open('user_info.txt','a') as f:
        f.write(user_name + "\n")

show_info = input("to see all user names? y/n::")

if show_info:
    try:
        with open('user_info.txt', 'r') as file:
            content = file.readlines()
    except Exception as e:
        print(e, type(e))
    else:
        for line in content:
            print(f' {line. rstrip()}')


FROM pyhton
WORKDIR /app
COPY . .
CMD ["python3","programme1.py"]

>> docker build -t pythonapp .
>> docker run -it --rm -v myvolume:/app pythonapp  ( Attach the volume myvolume to /app ) | Same Volume will be used further

root@ip-172-31-26-211:/home/ubuntu/python-progrmme# docker volume ls
DRIVER    VOLUME NAME
local     myvolume
root@ip-172-31-26-211:/home/ubuntu/python-progrmme# docker volume inspect myvolume
[
    {
        "CreatedAt": "2024-05-13T16:37:58Z",
        "Driver": "local",
        "Labels": null,
        "Mountpoint": "/var/lib/docker/volumes/myvolume/_data",
        "Name": "myvolume",
        "Options": null,
        "Scope": "local"
    }
]



██████╗ ██╗███╗   ██╗██████╗     ███╗   ███╗ ██████╗ ██╗   ██╗███╗   ██╗████████╗███████╗
██╔══██╗██║████╗  ██║██╔══██╗    ████╗ ████║██╔═══██╗██║   ██║████╗  ██║╚══██╔══╝██╔════╝
██████╔╝██║██╔██╗ ██║██║  ██║    ██╔████╔██║██║   ██║██║   ██║██╔██╗ ██║   ██║   ███████╗
██╔══██╗██║██║╚██╗██║██║  ██║    ██║╚██╔╝██║██║   ██║██║   ██║██║╚██╗██║   ██║   ╚════██║
██████╔╝██║██║ ╚████║██████╔╝    ██║ ╚═╝ ██║╚██████╔╝╚██████╔╝██║ ╚████║   ██║   ███████║
╚═════╝ ╚═╝╚═╝  ╚═══╝╚═════╝     ╚═╝     ╚═╝ ╚═════╝  ╚═════╝ ╚═╝  ╚═══╝   ╚═╝   ╚══════╝
                                                                                         
>> docker run --rm -v <system-file-path>:<container-file-path> <image-name,>
>> So files 📂 are mounted from external machine to containers


██████╗  ██████╗  ██████╗██╗  ██╗███████╗██████╗     ██╗ ██████╗ ███╗   ██╗ ██████╗ ██████╗ ███████╗
██╔══██╗██╔═══██╗██╔════╝██║ ██╔╝██╔════╝██╔══██╗    ██║██╔════╝ ████╗  ██║██╔═══██╗██╔══██╗██╔════╝
██║  ██║██║   ██║██║     █████╔╝ █████╗  ██████╔╝    ██║██║  ███╗██╔██╗ ██║██║   ██║██████╔╝█████╗  
██║  ██║██║   ██║██║     ██╔═██╗ ██╔══╝  ██╔══██╗    ██║██║   ██║██║╚██╗██║██║   ██║██╔══██╗██╔══╝  
██████╔╝╚██████╔╝╚██████╗██║  ██╗███████╗██║  ██║    ██║╚██████╔╝██║ ╚████║╚██████╔╝██║  ██║███████╗
╚═════╝  ╚═════╝  ╚═════╝╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝    ╚═╝ ╚═════╝ ╚═╝  ╚═══╝ ╚═════╝ ╚═╝  ╚═╝╚══════╝
                                                                                                    

.dockerignore file >> To ignore files from Docker images while Building 
>> Dockerfile | .git
